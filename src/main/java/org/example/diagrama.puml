@startuml

    class Atleta {
        -int id
        -String nombre
        -int edad
        -String disciplina
        -String departamento
        -LocalDate fechaIngreso
        -List~Entrenamiento~ entrenamientos

        +agregarEntrenamiento(): void
        +getNombre(): String
        +getEdad(): int
        +toString(): String
    }

    class Entrenamiento {
        -String fecha
        -String tipo
        -double marca
        -String ubicacion
        -String pais

        +getFecha(): String
        +getTipo(): String
        +getMarca(): double
        +toString(): String
    }

    class ServicioAtletas {
        -List~Atleta~ atletas
        -RepositorioAtletas repositorio

        +registrarAtleta(): void
        +registrarSesion(): void
        +buscarAtleta(): Atleta
        +mostrarHistorial(): void
        +guardarDatos(): void
    }

    class RepositorioAtletas {
        -AtletaDAO atletaDAO
        -EntrenamientoDAO entrenamientoDAO
        -boolean usarBaseDatos

        +guardar(): void
        +cargar(): List~Atleta~
        +sincronizarDatos(): void
    }

    class AtletaDAO {
        +crearAtleta(): int
        +obtenerAtletaPorId(): Atleta
        +actualizarAtleta(): boolean
        +eliminarAtleta(): boolean
    }

    class EntrenamientoDAO {
        +registrarEntrenamiento(): boolean
        +obtenerEntrenamientosPorAtleta(): List~Entrenamiento~
    }

    class ConexionBD {
        -HikariDataSource dataSource

        +obtenerConexion(): Connection
        +probarConexion(): boolean
    }

    class PresentadorAtletas {
        -Scanner scanner
        -ServicioAtletas servicio

        +mostrarMenu(): void
        +cerrar(): void
    }

    class EstadisticasAtleta {
        -Atleta atleta

        +calcularPromedio(): double
        +obtenerMejorMarca(): double
        +promedioNacional(): double
        +promedioInternacional(): double
        +mostrarEvolucion(): void
    }

    class CsvUtil {
        +exportarAtletas(): void
        +exportarEntrenamientos(): void
    }

    class PlanillaService {
        +procesar(): void
        -calcularPago(): double
    }

    class LocalDateAdapter {
        +write(): void
        +read(): LocalDate
    }

    class Main {
        +main(): void
    }

    ' Relaciones
    Atleta "1" *-- "0..*" Entrenamiento : contiene
    EstadisticasAtleta "1" --> "1" Atleta : analiza
    ServicioAtletas "1" --> "1" RepositorioAtletas : usa
    ServicioAtletas "1" --> "0..*" Atleta : gestiona
    ServicioAtletas "1" --> "1" PlanillaService : usa
    ServicioAtletas "1" ..> "1" EstadisticasAtleta : genera
    ServicioAtletas "1" --> "1" CsvUtil : exporta

    RepositorioAtletas "1" --> "1" AtletaDAO : usa
    RepositorioAtletas "1" --> "1" EntrenamientoDAO : usa
    RepositorioAtletas "1" --> "1" LocalDateAdapter : serializa

    AtletaDAO "1" --> "1" ConexionBD : usa
    EntrenamientoDAO "1" --> "1" ConexionBD : usa

    PresentadorAtletas "1" --> "1" ServicioAtletas : coordina
    Main "1" ..> "1" PresentadorAtletas : inicia

    CsvUtil ..> Atleta : exporta
    CsvUtil ..> Entrenamiento : exporta
    PlanillaService ..> Atleta : procesa

@enduml